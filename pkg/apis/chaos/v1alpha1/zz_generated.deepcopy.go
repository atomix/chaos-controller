// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChaosMonkey) DeepCopyInto(out *ChaosMonkey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChaosMonkey.
func (in *ChaosMonkey) DeepCopy() *ChaosMonkey {
	if in == nil {
		return nil
	}
	out := new(ChaosMonkey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChaosMonkey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChaosMonkeyList) DeepCopyInto(out *ChaosMonkeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChaosMonkey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChaosMonkeyList.
func (in *ChaosMonkeyList) DeepCopy() *ChaosMonkeyList {
	if in == nil {
		return nil
	}
	out := new(ChaosMonkeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChaosMonkeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChaosMonkeySpec) DeepCopyInto(out *ChaosMonkeySpec) {
	*out = *in
	if in.RateSeconds != nil {
		in, out := &in.RateSeconds, &out.RateSeconds
		*out = new(int64)
		**out = **in
	}
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Jitter != nil {
		in, out := &in.Jitter, &out.Jitter
		*out = new(float64)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(MonkeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Crash != nil {
		in, out := &in.Crash, &out.Crash
		*out = new(CrashMonkey)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(PartitionMonkey)
		**out = **in
	}
	if in.Stress != nil {
		in, out := &in.Stress, &out.Stress
		*out = new(StressMonkey)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChaosMonkeySpec.
func (in *ChaosMonkeySpec) DeepCopy() *ChaosMonkeySpec {
	if in == nil {
		return nil
	}
	out := new(ChaosMonkeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChaosMonkeyStatus) DeepCopyInto(out *ChaosMonkeyStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChaosMonkeyStatus.
func (in *ChaosMonkeyStatus) DeepCopy() *ChaosMonkeyStatus {
	if in == nil {
		return nil
	}
	out := new(ChaosMonkeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Crash) DeepCopyInto(out *Crash) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Crash.
func (in *Crash) DeepCopy() *Crash {
	if in == nil {
		return nil
	}
	out := new(Crash)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Crash) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrashList) DeepCopyInto(out *CrashList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Crash, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrashList.
func (in *CrashList) DeepCopy() *CrashList {
	if in == nil {
		return nil
	}
	out := new(CrashList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrashList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrashMonkey) DeepCopyInto(out *CrashMonkey) {
	*out = *in
	out.CrashStrategy = in.CrashStrategy
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrashMonkey.
func (in *CrashMonkey) DeepCopy() *CrashMonkey {
	if in == nil {
		return nil
	}
	out := new(CrashMonkey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrashSpec) DeepCopyInto(out *CrashSpec) {
	*out = *in
	out.CrashStrategy = in.CrashStrategy
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrashSpec.
func (in *CrashSpec) DeepCopy() *CrashSpec {
	if in == nil {
		return nil
	}
	out := new(CrashSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrashStatus) DeepCopyInto(out *CrashStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrashStatus.
func (in *CrashStatus) DeepCopy() *CrashStatus {
	if in == nil {
		return nil
	}
	out := new(CrashStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrashStrategy) DeepCopyInto(out *CrashStrategy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrashStrategy.
func (in *CrashStrategy) DeepCopy() *CrashStrategy {
	if in == nil {
		return nil
	}
	out := new(CrashStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonkeySelector) DeepCopyInto(out *MonkeySelector) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = new(PodSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonkeySelector.
func (in *MonkeySelector) DeepCopy() *MonkeySelector {
	if in == nil {
		return nil
	}
	out := new(MonkeySelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPartition) DeepCopyInto(out *NetworkPartition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPartition.
func (in *NetworkPartition) DeepCopy() *NetworkPartition {
	if in == nil {
		return nil
	}
	out := new(NetworkPartition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPartition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPartitionList) DeepCopyInto(out *NetworkPartitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkPartition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPartitionList.
func (in *NetworkPartitionList) DeepCopy() *NetworkPartitionList {
	if in == nil {
		return nil
	}
	out := new(NetworkPartitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPartitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPartitionSpec) DeepCopyInto(out *NetworkPartitionSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPartitionSpec.
func (in *NetworkPartitionSpec) DeepCopy() *NetworkPartitionSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkPartitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPartitionStatus) DeepCopyInto(out *NetworkPartitionStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPartitionStatus.
func (in *NetworkPartitionStatus) DeepCopy() *NetworkPartitionStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkPartitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionMonkey) DeepCopyInto(out *PartitionMonkey) {
	*out = *in
	out.PartitionStrategy = in.PartitionStrategy
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionMonkey.
func (in *PartitionMonkey) DeepCopy() *PartitionMonkey {
	if in == nil {
		return nil
	}
	out := new(PartitionMonkey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionStrategy) DeepCopyInto(out *PartitionStrategy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionStrategy.
func (in *PartitionStrategy) DeepCopy() *PartitionStrategy {
	if in == nil {
		return nil
	}
	out := new(PartitionStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelector) DeepCopyInto(out *PodSelector) {
	*out = *in
	if in.MatchPods != nil {
		in, out := &in.MatchPods, &out.MatchPods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelector.
func (in *PodSelector) DeepCopy() *PodSelector {
	if in == nil {
		return nil
	}
	out := new(PodSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stress) DeepCopyInto(out *Stress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stress.
func (in *Stress) DeepCopy() *Stress {
	if in == nil {
		return nil
	}
	out := new(Stress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressCPU) DeepCopyInto(out *StressCPU) {
	*out = *in
	in.StressConfig.DeepCopyInto(&out.StressConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressCPU.
func (in *StressCPU) DeepCopy() *StressCPU {
	if in == nil {
		return nil
	}
	out := new(StressCPU)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressConfig) DeepCopyInto(out *StressConfig) {
	*out = *in
	if in.Workers != nil {
		in, out := &in.Workers, &out.Workers
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressConfig.
func (in *StressConfig) DeepCopy() *StressConfig {
	if in == nil {
		return nil
	}
	out := new(StressConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressHDD) DeepCopyInto(out *StressHDD) {
	*out = *in
	in.StressConfig.DeepCopyInto(&out.StressConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressHDD.
func (in *StressHDD) DeepCopy() *StressHDD {
	if in == nil {
		return nil
	}
	out := new(StressHDD)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressIO) DeepCopyInto(out *StressIO) {
	*out = *in
	in.StressConfig.DeepCopyInto(&out.StressConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressIO.
func (in *StressIO) DeepCopy() *StressIO {
	if in == nil {
		return nil
	}
	out := new(StressIO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressList) DeepCopyInto(out *StressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressList.
func (in *StressList) DeepCopy() *StressList {
	if in == nil {
		return nil
	}
	out := new(StressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressMemory) DeepCopyInto(out *StressMemory) {
	*out = *in
	in.StressConfig.DeepCopyInto(&out.StressConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressMemory.
func (in *StressMemory) DeepCopy() *StressMemory {
	if in == nil {
		return nil
	}
	out := new(StressMemory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressMonkey) DeepCopyInto(out *StressMonkey) {
	*out = *in
	out.StressStrategy = in.StressStrategy
	if in.IO != nil {
		in, out := &in.IO, &out.IO
		*out = new(StressIO)
		(*in).DeepCopyInto(*out)
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(StressCPU)
		(*in).DeepCopyInto(*out)
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(StressMemory)
		(*in).DeepCopyInto(*out)
	}
	if in.HDD != nil {
		in, out := &in.HDD, &out.HDD
		*out = new(StressHDD)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(StressNetwork)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressMonkey.
func (in *StressMonkey) DeepCopy() *StressMonkey {
	if in == nil {
		return nil
	}
	out := new(StressMonkey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressNetwork) DeepCopyInto(out *StressNetwork) {
	*out = *in
	if in.LatencyMilliseconds != nil {
		in, out := &in.LatencyMilliseconds, &out.LatencyMilliseconds
		*out = new(int64)
		**out = **in
	}
	if in.Jitter != nil {
		in, out := &in.Jitter, &out.Jitter
		*out = new(float64)
		**out = **in
	}
	if in.Correlation != nil {
		in, out := &in.Correlation, &out.Correlation
		*out = new(float64)
		**out = **in
	}
	if in.Distribution != nil {
		in, out := &in.Distribution, &out.Distribution
		*out = new(LatencyDistribution)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressNetwork.
func (in *StressNetwork) DeepCopy() *StressNetwork {
	if in == nil {
		return nil
	}
	out := new(StressNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressSpec) DeepCopyInto(out *StressSpec) {
	*out = *in
	if in.IO != nil {
		in, out := &in.IO, &out.IO
		*out = new(StressIO)
		(*in).DeepCopyInto(*out)
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(StressCPU)
		(*in).DeepCopyInto(*out)
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(StressMemory)
		(*in).DeepCopyInto(*out)
	}
	if in.HDD != nil {
		in, out := &in.HDD, &out.HDD
		*out = new(StressHDD)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(StressNetwork)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressSpec.
func (in *StressSpec) DeepCopy() *StressSpec {
	if in == nil {
		return nil
	}
	out := new(StressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressStatus) DeepCopyInto(out *StressStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressStatus.
func (in *StressStatus) DeepCopy() *StressStatus {
	if in == nil {
		return nil
	}
	out := new(StressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressStrategy) DeepCopyInto(out *StressStrategy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressStrategy.
func (in *StressStrategy) DeepCopy() *StressStrategy {
	if in == nil {
		return nil
	}
	out := new(StressStrategy)
	in.DeepCopyInto(out)
	return out
}
